package LintCode.Binary.Binary;

/**
 * Created by Administrator on 2017/6/1.
 */

class ArrayReader {
    // get the number at index, return -1 if index is less than zero.
    public int get(int index) {
        if (index > 515)
            return 2147483647;
        else if (index < 515) {
            return -1;
        } else {
            return 528;
        }
    }
}
public class LintBinary447SearchInABigSortedArray {
    /**
     * @param reader: An instance of ArrayReader.
     * @param target: An integer
     * @return : An integer which is the index of the target number
     */
    public static int searchBigSortedArray(ArrayReader reader, int target) {
        int idx = 1;
        //很妙, 没必要用<= 如果有多个重复数字. 只需要找到第一个即可.
        // 从idx - 1 避免了这个case to : [1,3,6,9,21], 3
        while (reader.get(idx - 1) < target) {
            idx *= 2;
        }
        int lo = idx / 2;//只需要从这里开始, 没必要从0
        int hi = idx - 1;//只需要到这里终止
        while (lo + 1 < hi) {
            int mid = lo + (hi - lo) / 2;
            if (reader.get(mid) < target) {
                lo = mid;
            } else if (reader.get(mid) >= target) {//可简化
                hi = mid;
            }
        }
        if (reader.get(hi) == target) {
            return hi;
        } else if (reader.get(lo) == target) {
            return lo;
        } else {
            return -1;
        }
    }

    public static void main(String[] args) {

        int[] ar = {1,2,8,9,10,11,12,14,14,15,15,16,18,18,19,19,19,19,20,20,21,21,22,22,30,30,31,32,33,33,33,34,34,36,36,37,40,41,43,43,43,44,48,48,48,49,51,52,53,54,54,56,59,59,60,61,62,62,63,63,63,64,65,66,66,66,68,69,69,71,72,75,76,78,78,80,80,80,81,82,82,83,83,84,84,85,86,86,88,88,88,89,90,90,93,94,94,94,95,96,97,98,98,98,98,99,100,100,101,103,103,105,105,107,107,109,109,110,111,111,112,114,115,115,115,115,115,117,118,119,119,120,122,122,123,123,124,124,124,125,125,126,126,127,130,131,132,134,135,141,144,144,145,147,148,148,149,149,150,151,151,153,154,157,157,158,160,160,162,162,162,163,163,164,164,166,167,167,167,169,171,171,171,172,173,178,178,178,179,180,181,181,183,184,185,185,187,188,188,189,189,190,190,191,192,193,194,195,195,196,197,198,199,201,202,204,205,206,207,208,210,213,215,215,217,217,218,219,220,220,221,221,223,223,229,229,230,230,230,230,231,233,233,235,240,242,242,243,243,244,245,248,248,249,250,251,252,253,253,253,255,255,257,258,258,259,260,261,263,264,265,267,268,269,273,274,275,275,277,278,279,280,281,281,283,284,287,288,289,289,290,291,292,292,292,293,294,295,295,299,300,301,302,303,303,305,307,307,308,309,309,309,311,311,312,313,313,314,315,315,317,318,320,320,322,324,324,326,326,327,327,329,329,329,331,332,336,340,340,340,341,342,342,343,343,343,344,344,345,345,346,346,346,347,348,349,352,352,353,355,356,356,357,357,358,359,360,360,361,362,363,363,364,365,366,368,368,369,370,372,375,375,378,378,379,379,379,379,381,382,383,384,384,385,387,389,390,391,391,391,392,392,393,394,395,395,396,396,397,399,401,401,401,402,403,404,411,411,411,412,415,416,417,418,418,419,420,420,420,420,421,422,422,423,423,424,425,425,426,427,428,428,430,431,431,433,433,434,434,436,437,438,438,438,438,439,440,441,444,444,445,448,448,449,451,451,452,455,456,456,457,458,458,458,459,459,460,460,461,463,463,464,465,467,470,472,474,475,477,478,479,479,480,480,481,482,482,483,483,484,485,485,486,487,487,488,488,493,494,494,494,495,496,497,498,501,502,503,506,506,508,509,509,510,511,511,512,513,515,516,517,519,519,520,520,521,521,523,524,525,525,526,527,528,528,529,529,530,532,533,534,535,535,535,537,537,537,540,541,542,542,543,544,546,547,547,548,551,552,553,553,554,556,557,557,558,559,560,562,563,563,564,567,568,568,569,570,572,572,574,575,576,579,579,581,584,585,585,586,590,590,591,592,593,594,597,597,598,598,598,598,598,599,602,602,603,604,604,606,607,608,609,610,613,613,613,615,615,616,617,618,620,621,624,624,624,624,625,629,629,631,631,632,635,636,638,641,644,644,644,645,646,646,647,648,649,651,653,654,655,655,655,655,655,657,658,659,661,662,662,662,662,663,664,665,666,671,671,671,671,672,674,674,675,675,675,676,676,677,678,680,682,682,682,684,685,686,687,690,690,690,691,692,692,693,696,697,702,702,703,704,707,708,708,708,709,709,709,709,711,711,712,712,712,713,713,714,714,714,716,717,717,717,718,719,721,722,722,723,723,724,725,726,726,730,731,731,731,733,734,735,735,737,738,742,744,746,747,747,748,755,758,759,759,760,760,763,763,764,765,765,767,767,772,774,774,775,775,777,778,779,779,779,779,780,780,781,782,783,783,783,785,785,786,787,788,789,791,791,792,792,793,793,793,794,797,797,800,803,805,805,806,806,806,811,812,812,813,813,814,815,816,817,818,821,823,824,825,826,826,826,827,830,830,831,831,831,831,832,833,834,835,837,838,839,839,840,842,842,843,843,844,845,845,845,848,849,849,849,849,850,850,851,851,854,856,856,858,859,861,864,866,866,868,869,869,871,872,872,873,875,875,876,876,877,879,882,882,883,884,885,886,887,890,892,892,893,894,895,895,896,896,897,898,899,899,899,899,901,904,904,904,905,906,906,906,907,908,910,910,911,912,913,913,916,916,918,919,920,921,922,923,923,923,923,924,926,926,927,927,930,931,932,933,933,934,939,939,939,942,944,946,946,947,948,949,950,954,954,955,955,955,956,956,957,959,960,960,960,960,960,961,961,961,962,965,966,967,968,968,970,973,973,977,977,979,980,982,985,986,987,989,989,992,994,995,996,998,999,999};
        int target = 515;

    }
}
